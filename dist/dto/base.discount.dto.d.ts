import { BaseDiscountFilterDto } from './base.discount.filter.dto';
import { BaseDiscountBulkDto } from './base.discount.bulk.dto';
import { BaseDiscountBxgxDto } from './base.discount.bxgx.dto';
import { BaseDiscountBxgyDto } from './base.discount.bxgy.dto';
import { BaseDiscountConditionDto } from './base.discount.condition.dto';
import { BulkAdjustmentCountType } from "enum/BulkAdjustmentCountType";
import { CartAdjustmentDiscountType } from "enum/CartAdjustmentDiscountType";
import { DiscountType } from "enum/DiscountType";
import { ProductAdjustmentDiscountType } from "enum/ProductAdjustmentDiscountType";
import { BXGYType } from "enum/BXGYType";
import { BXGYCountType } from "enum/BXGYCountType";
import { BXGYGetType } from "enum/BXGYGetType";
export declare class BaseDiscountDto {
    name: string;
    discountType: DiscountType;
    isEnabled: boolean;
    isIgnoreOther: boolean;
    isIgnoreThisIfOtherMatched: boolean;
    priority: number;
    usageLimit: number;
    productAdjustmentDiscountType: ProductAdjustmentDiscountType;
    productAdjustmentDiscountAmount: number;
    cartAdjustmentDiscountType: CartAdjustmentDiscountType;
    cartAdjustmentDiscountAmount: number;
    cartAdjustmentLabel: string;
    bulkAdjustmentCountType: BulkAdjustmentCountType;
    discountBulks: BaseDiscountBulkDto[];
    isBXGXRecursive: boolean;
    discountBXGXs: BaseDiscountBxgxDto[];
    BXGYType: BXGYType;
    BXGYCountType: BXGYCountType;
    BXGYGetType: BXGYGetType;
    isBXGYRecursive: boolean;
    discountBXGYs: BaseDiscountBxgyDto[];
    activeFromDateTime: Date;
    activeToDateTime: Date;
    isMatchAllCondition: boolean;
    discountFilers: BaseDiscountFilterDto[];
    discountConditions: BaseDiscountConditionDto[];
}
